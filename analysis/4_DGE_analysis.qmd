---
title: "Differential gene expression analysis"
author: "Tu Hu"
format: html
editor: visual
---

## Load package and data

```{r load library, message=FALSE, warning=FALSE}
library(DESeq2)
library(EnhancedVolcano)
library(ggvenn)
library(stringr)
library(ggpubr)
```

```{r load data}
se <- readRDS("../data/se_pcoding_scale_abundant_filtS.rds")

colData(se)
```

## Compare after- (timepoint 1, 2) and pre- immune within each vacc

I used `lapply` below, thus the code is a bit abstract to read. In short, for each vaccine, I performed two DGE (differential gene expression) analysis to compare (1) `Immu1 vs. baseline` (Day 1 after the first immunization *vs.* baseline), and (2) `Immu2 vs. baseline` (Day 1 after the second immunization *vs.* baseline)

```{r post-immu vs pre (paired), cache=TRUE, message=FALSE, warning=FALSE}
vacc_l <- se$vacc %>% unique()
DGE_immu_vs_pre <- 
  lapply(vacc_l,
         function(vacc){
    se <-   
      se[rowData(se)$.abundant == TRUE, se$vacc == vacc]
    # rownames(se) <- rowData(se)$gene_name
    
    count <- se %>% assay(1) %>% 
      as.matrix() %>% 
      round()
    
    dds <- 
      DESeqDataSetFromMatrix(
        count, 
        colData = colData(se),
        design = ~ animal + timepoint
        )
  
    dds <- DESeq(dds, parallel = F)
  
    immu1_vs_pre <- 
      lfcShrink(dds, 
                coef = "timepoint_immu1_vs_pre", 
                type = "apeglm", 
                parallel = F)
    
    immu2_vs_pre <- 
      lfcShrink(dds, 
                coef = "timepoint_immu2_vs_pre", 
                type = "apeglm", 
                parallel = F)
    
    DGE_immu_vs_pre <- 
      list("immu1_vs_pre" = immu1_vs_pre, 
           "immu2_vs_pre" = immu2_vs_pre)
    
    return(DGE_immu_vs_pre)
  })

names(DGE_immu_vs_pre) <- vacc_l

# readr::write_rds(DGE_immu_vs_pre, "../data/DElist/DGE_immu_vs_pre.rds")
```

```{r volcano plot and DE list write, message=FALSE, warning=FALSE}
gene_data_Type <- readRDS("../data/gene_data.rds")
if (!dir.exists("../data/DElist/")) {dir.create("../data/DElist")}
if (!dir.exists("../data/figure")) {dir.create("../data/figure")}
```

## CAF09hi: immu 1 vs. baseline & immu 2 vs. baseline

```{r}
fun_extract_de_up <- 
  function(vacc, contrast){
    
    res <- DGE_immu_vs_pre[[vacc]][[contrast]] %>% 
      as_tibble(rownames = "gene_name") %>% 
      filter(!gene_name %>% str_detect("ENSMFAG"))
    
    res_filt <- 
      res %>% filter(log2FoldChange > 1,
                     padj < .05) %>% 
      arrange(-log2FoldChange) %>% 
      left_join(gene_data_Type %>% dplyr::select(external_gene_name, description),
                by = c("gene_name" = "external_gene_name"))
    
    g_name <- res_filt %>% pull(gene_name)
    return(g_name)
    } 
```

## Venn

```{r}
fun_extract_de <- 
  function(vacc, contrast, direction){
    
    res <- DGE_immu_vs_pre[[vacc]][[contrast]] %>% 
      as_tibble(rownames = "gene_name") %>% 
      filter(!gene_name %>% str_detect("ENSMFAG"))
    
    res_filt <- 
      if(direction == "up"){
        res %>% filter(log2FoldChange > 1, padj < .05)
      }
      else if (direction == "down"){
        res %>% filter(log2FoldChange < -1, padj < .05)
      }
    
    g_name <- res_filt %>% pull(gene_name)
    return(g_name)
  } 

venn <- 
  expand.grid(
    vacc = vacc_l,
    direction = c("up", "down")) %>% 
  mutate(venn = purrr::map2(vacc, direction, function(vacc, direction){
    immu1 <- fun_extract_de(vacc, "immu1_vs_pre", direction)
    immu2 <- fun_extract_de(vacc, "immu2_vs_pre", direction)
    vacc <- case_when(
           vacc == "H107_CAF04_CpG" ~ "CAF10b",
           vacc == "H107_CAF09c" ~ "CAF09hi")
    venn <- list(immu1, immu2)
    names(venn) <- c("Imm.1 vs baseline", "Imm.2 vs baseline")    
    venn <- 
      venn %>%     
      ggvenn(text_size = 6, fill_color = c("#B9B7B7", "#646161")) + 
      geom_text(aes(x = 0, y = 1.5,
                    label = ifelse(vacc == "CAF09hi", "CAF09^hi", "CAF10b")),
                parse = TRUE,
                size = 6) +
      geom_text(aes(x = -2, y = 0, label = direction), 
                size = 6)
    fn <- file.path("..", "data", "figure", paste0("venn_", vacc, "_", direction, ".jpeg"))
    
    ggsave(fn, venn, width = 6, height = 4, dpi = 1000)
  }))
```
