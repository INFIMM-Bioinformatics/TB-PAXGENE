---
title: "Imputing missing values at the baseline using global or group mean has nearly no difference in differential gene expression analysis"
author: "Tu Hu"
format: html
editor: visual
---

global mean was used to replace the missing values.

## Load package and data

```{r load library, message=FALSE, warning=FALSE}
library(DESeq2)
library(EnhancedVolcano)
library(ggvenn)
library(stringr)
library(ggpubr)
library(tidyr)
library(purrr)
```

```{r load data}
se <- readRDS("../data/se_pcoding_scale_abundant_filtS.rds")
```

## Compare after- (timepoint 1, 2) and pre- immune within each vacc

I used `lapply` below, thus the code is a bit abstract to read. In short, for each vaccine, I performed two DGE (differential gene expression) analysis to compare (1) `Immu1 vs. baseline` (Day 1 after the first immunization *vs.* baseline), and (2) `Immu2 vs. baseline` (Day 1 after the second immunization *vs.* baseline)

```{r post-immu vs pre (paired), cache=TRUE, message=FALSE, warning=FALSE}
vacc_l <- se$vacc %>% unique()
DGE_immu_vs_pre_global_mean <-
  lapply(vacc_l,
         function(vacc){
    se <-   
      se[rowData(se)$.abundant == TRUE, 
         (se$vacc == vacc) | (se$timepoint == "pre")]
    
    # rownames(se) <- rowData(se)$gene_name
    
    count <- se %>% assay(1) %>% 
      as.matrix() %>% 
      round()
    
    dds <- 
      DESeqDataSetFromMatrix(
        count, 
        colData = colData(se),
        design = ~ animal + timepoint
        )
  
    dds <- DESeq(dds, parallel = F)
  
    immu1_vs_pre <- 
      lfcShrink(dds, 
                coef = "timepoint_immu1_vs_pre", 
                type = "apeglm", 
                parallel = F)
    
    immu2_vs_pre <- 
      lfcShrink(dds, 
                coef = "timepoint_immu2_vs_pre", 
                type = "apeglm", 
                parallel = F)
    
    DGE_immu_vs_pre <- 
      list("immu1_vs_pre" = immu1_vs_pre, 
           "immu2_vs_pre" = immu2_vs_pre)
    
    return(DGE_immu_vs_pre)
  })

names(DGE_immu_vs_pre_global_mean) <- vacc_l

# readr::write_rds(DGE_immu_vs_pre_global_mean, "../data/DElist/DGE_immu_vs_pre_global_mean.rds")
```

## Group mean results

```{r}
DGE_group_mean <- 
  readr::read_rds("../data/DElist/DGE_immu_vs_pre.rds")
```

## Save DEG list

```{r}
DEGlist <- 
  DGE_immu_vs_pre_global_mean %>% 
  unlist() %>% 
  lapply(function(deglist){
    deglist <- deglist %>% as_tibble(rownames = "gene_name")
    deglist <- deglist %>% filter(padj < .05, abs(log2FoldChange) > 1) %>% 
      arrange(-log2FoldChange)
    deglist <- deglist %>% filter(!gene_name %>% str_detect("ENSMFAG"))
  })

names(DEGlist) <- 
  names(DEGlist) %>% str_replace("H107_CAF09c", "CAF09hi") %>% 
  str_replace("H107_CAF04_CpG" , "CAF10b")

openxlsx::write.xlsx(DEGlist, "../data/DElist/DGE_immu_vs_pre_global_mean.xlsx")
```

## Venn diagram

```{r}
gene_data_Type <- readRDS("../data/gene_data.rds")

fun_extract_de <- 
  function(vacc, contrast, direction){
    
    res <- DGE_immu_vs_pre_global_mean[[vacc]][[contrast]] %>% 
      as_tibble(rownames = "gene_name") %>% 
      filter(!gene_name %>% str_detect("ENSMFAG"))
    
    res_filt <- 
      if(direction == "up"){
        res %>% filter(log2FoldChange > 1, padj < .05)
      }
      else if (direction == "down"){
        res %>% filter(log2FoldChange < -1, padj < .05)
      }
    
    g_name <- res_filt %>% pull(gene_name)
    return(g_name)
    } 

CAF09_immu1 <- fun_extract_de("H107_CAF09c", "immu1_vs_pre", "up")
CAF09_immu2 <- fun_extract_de("H107_CAF09c", "immu2_vs_pre", "up")



library(ggvenn)
library(dplyr)

test <- 
  list(`immu1 vs. pre` = CAF09_immu1, 
       `immu2 vs. pre` = CAF09_immu2) %>% 
    ggvenn(text_size = 6) + 
    geom_text(aes(x = 0, y = 1.5, 
                  label = "CAF09^hi"), 
              parse = TRUE,
              size = 6) +  
    geom_text(aes(x = -2, y = 0, label = "up"), size = 6)

ggsave("../data/figure/venn_test.png", test, width = 6.5, height = 5, dpi = 1000)


venn <- 
  expand.grid(
    vacc = vacc_l,
    direction = c("up", "down")) %>% 
  mutate(venn = map2(vacc, direction, function(vacc, direction){
    immu1 <- fun_extract_de(vacc, "immu1_vs_pre", direction)
    immu2 <- fun_extract_de(vacc, "immu2_vs_pre", direction)
    vacc <- case_when(
           vacc == "H107_CAF04_CpG" ~ "CAF10b",
           vacc == "H107_CAF09c" ~ "CAF09hi")
    venn <- list(immu1, immu2)
    names(venn) <- paste(vacc, c("immu1 vs pre", "immu2 vs pre"))    
    venn <- venn %>% ggvenn(text_size = 6) + geom_text(aes(x = -2, y = 0, label = direction), size = 6)
    fn <- file.path("..", "data", "figure", paste0("venn_", vacc, "_", direction, ".png"))
    ggsave(fn, venn, width = 6.5, height = 5, dpi = 1000)
  }))
```

## Between vaccine

```{r}
timepoint_l <- c("immu1", "immu2")
volcano <- 
  lapply(timepoint_l, 
         function(timepoint){
           se <- se[!rownames(se) %>% str_detect("ENSMFAG"), ]
             
           se_vacc_effect_timepoint <- 
             se[rowData(se)$.abundant == TRUE, se$timepoint == timepoint]
           rownames(se_vacc_effect_timepoint) <- rowData(se_vacc_effect_timepoint)$gene_name
  
           count <- se_vacc_effect_timepoint %>% assay(1) %>% as.matrix() %>% round()
                
           dds <- 
             DESeqDataSetFromMatrix(
               count, 
               colData = colData(se_vacc_effect_timepoint),
               design = ~ vacc)
              
            dds <- DESeq(dds, parallel = F)
            
            res_vacc <- 
                  lfcShrink(dds, 
                            coef = "vacc_H107_CAF09c_vs_H107_CAF04_CpG", 
                            type = "apeglm", 
                            parallel = F)
            
            volcano <- EnhancedVolcano(res_vacc, rownames(res_vacc), x = "log2FoldChange", y = "pvalue",
                                       title = "CAF09hi vs CAF10b", subtitle = timepoint, FCcutoff = 1, pCutoff = .05)
            ggsave(filename = paste0("../data/figure/volcano", "between_vacc", timepoint, ".png"), 
                   volcano, width = 8, height = 10, dpi = 1000)
  })

volcano
```
